{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xbaa62418679F1433D337414a3144f57908913567",
      "txHash": "0x42cbd9734a1021b236db46596eb1219ddfff32bd52204ec3af5eabd34ec4bb7d",
      "kind": "uups"
    },
    {
      "address": "0x52a236d6a45984e81340fEa984890B2f83ab659F",
      "txHash": "0xc2a632449124b90e692caca8f5664de8d0ef9a1bc61b7b60032c1c463170db68",
      "kind": "uups"
    }
  ],
  "impls": {
    "c6185f637182acb30aba0f26005e7098157044a13f3651c269b877017e390aba": {
      "address": "0xd5d9DD5837Fc1ACEBEC207BB5D75858859eadfD0",
      "txHash": "0x765a8cf4a45bff6e41c2cdf12a4c91b0c0f99fdc227e9137a68eb9f9628f0001",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "layerZeroEndpoint",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:73"
          },
          {
            "label": "stargateRouter",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:74"
          },
          {
            "label": "currentChain",
            "offset": 20,
            "slot": "252",
            "type": "t_uint16",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:75"
          },
          {
            "label": "sgPoolId",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:76"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:79"
          },
          {
            "label": "stablecoin",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:80"
          },
          {
            "label": "stablecoinPriceFeed",
            "offset": 0,
            "slot": "256",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "ControllerXChain",
            "src": "contracts/controllers/ControllerXChain.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "77cb9ea37134f0eff606474ce787ca1842669f8bbb63e87127b69679d6e3240c": {
      "address": "0xe3Af1E531A2aa134706b2BFD886AC8ee83824a70",
      "txHash": "0x9266f990edca301622cc63135ddfad690f239621d9caacfec9385971efb1b865",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:78"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:79"
          },
          {
            "label": "stablecoin",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:80"
          },
          {
            "label": "entranceFeeFactor",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:83"
          },
          {
            "label": "withdrawFeeFactor",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:84"
          },
          {
            "label": "defaultSlippageFactor",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:85"
          },
          {
            "label": "gov",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:88"
          },
          {
            "label": "swapPaths",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:91"
          },
          {
            "label": "swapPathLength",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:92"
          },
          {
            "label": "priceFeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "contract": "VaultBase",
            "src": "contracts/vaults/_VaultBase.sol:93"
          },
          {
            "label": "assetLockedTotal",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:64"
          },
          {
            "label": "lastEarn",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:65"
          },
          {
            "label": "asset",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:68"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:69"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "365",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:70"
          },
          {
            "label": "farmContract",
            "offset": 0,
            "slot": "366",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:71"
          },
          {
            "label": "rewardsToken",
            "offset": 0,
            "slot": "367",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:72"
          },
          {
            "label": "isFarmable",
            "offset": 20,
            "slot": "367",
            "type": "t_bool",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:73"
          },
          {
            "label": "pid",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:74"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "369",
            "type": "t_address",
            "contract": "VaultAMMBase",
            "src": "contracts/vaults/_VaultAMMBase.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
